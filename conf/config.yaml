defaults:
  - hydra: custom
  - data_path: local
  - dataset: dataset

description: ''

n_steps: 1000
bs: 2
k_shot: 3
device: cpu

metrics:
  - type: metrics.Recall
  - type: metrics.Precision

hooks:
  - type: callbacks.LogCallback
    frequency: 20

  - type: callbacks.ValidationCallback
    frequency: 300

  - type: callbacks.TensorBoardCallback
    frequency: 20

  - type: callbacks.SaveCheckpointCallback
    frequency: 600

model:
  type: models.prikol.PrikolNet
  # transformer
  embd_dim: 2048
  n_head: 4
  attn_pdrop: 0.1
  resid_pdrop: 0.1
  embd_pdrop: 0.1
  n_layer: 1
  out_dim: 1
  backbone:
    type: models.backbone.resnet_backbone
    name: resnet50
    #  pretrained: true
    pretrained: /home/vladimir/Diploma/checkpoints/resnet50_mpmnist.pt
    trainable_layers: 3
    returned_layer: 4
    stride: 32

optimizer:
  type: torch.optim.Adam
  lr: 0.0003
loss:
  # type: losses.BinaryFocalLoss
  # gamma: 2
  # alpha: 0.99
  type: torch.nn.BCEWithLogitsLoss
  pos_weight:
    type: torch.tensor
    data: 5

scheduler:
  type: torch.optim.lr_scheduler.StepLR
  step_size: 1000
  gamma: 1.

data:
  bbox_format: coco
  input_size: [320, 320]
  train_transforms:
    - type: albumentations.Resize
      height: ${data.input_size.0}
      width: ${data.input_size.1}
    - type: albumentations.Normalize
    - type: albumentations.pytorch.transforms.ToTensorV2

  val_transforms:
    - type: albumentations.Resize
      height: ${data.input_size.0}
      width: ${data.input_size.1}
    - type: albumentations.Normalize
    - type: albumentations.pytorch.transforms.ToTensorV2

  train_dataset:
    - ${megapixel_mnist_train}

  validation_dataset:
    - ${megapixel_mnist_val_novel_cats}
    - ${megapixel_mnist_val_train_cats}
